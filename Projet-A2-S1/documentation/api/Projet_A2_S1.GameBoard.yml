### YamlMime:ManagedReference
items:
- uid: Projet_A2_S1.GameBoard
  commentId: T:Projet_A2_S1.GameBoard
  id: GameBoard
  parent: Projet_A2_S1
  children:
  - Projet_A2_S1.GameBoard.#ctor
  - Projet_A2_S1.GameBoard.#ctor(System.Boolean)
  - Projet_A2_S1.GameBoard.Board
  - Projet_A2_S1.GameBoard.GetWord(System.Int32,System.Int32,System.String,System.Int32,System.Collections.Generic.Dictionary{System.ValueTuple{System.Int32,System.Int32},System.Char})
  - Projet_A2_S1.GameBoard.Maj_Plateau
  - Projet_A2_S1.GameBoard.SaveAndWrite
  - Projet_A2_S1.GameBoard.ToString
  langs:
  - csharp
  - vb
  name: GameBoard
  nameWithType: GameBoard
  fullName: Projet_A2_S1.GameBoard
  type: Class
  assemblies:
  - Projet-A2-S1
  namespace: Projet_A2_S1
  syntax:
    content: public class GameBoard
    content.vb: Public Class GameBoard
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
- uid: Projet_A2_S1.GameBoard.Board
  commentId: F:Projet_A2_S1.GameBoard.Board
  id: Board
  parent: Projet_A2_S1.GameBoard
  langs:
  - csharp
  - vb
  name: Board
  nameWithType: GameBoard.Board
  fullName: Projet_A2_S1.GameBoard.Board
  type: Field
  assemblies:
  - Projet-A2-S1
  namespace: Projet_A2_S1
  syntax:
    content: public char[,] Board
    return:
      type: System.Char[,]
    content.vb: Public Board As Char(,)
- uid: Projet_A2_S1.GameBoard.#ctor
  commentId: M:Projet_A2_S1.GameBoard.#ctor
  id: '#ctor'
  parent: Projet_A2_S1.GameBoard
  langs:
  - csharp
  - vb
  name: GameBoard()
  nameWithType: GameBoard.GameBoard()
  fullName: Projet_A2_S1.GameBoard.GameBoard()
  type: Constructor
  assemblies:
  - Projet-A2-S1
  namespace: Projet_A2_S1
  summary: >-
    Build a Object GameBoard. In it the user personalized his board 

    It is also the **ToRead** function
  example: []
  syntax:
    content: public GameBoard()
    content.vb: Public Sub New()
  overload: Projet_A2_S1.GameBoard.#ctor*
  nameWithType.vb: GameBoard.New()
  fullName.vb: Projet_A2_S1.GameBoard.New()
  name.vb: New()
- uid: Projet_A2_S1.GameBoard.#ctor(System.Boolean)
  commentId: M:Projet_A2_S1.GameBoard.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: Projet_A2_S1.GameBoard
  langs:
  - csharp
  - vb
  name: GameBoard(bool)
  nameWithType: GameBoard.GameBoard(bool)
  fullName: Projet_A2_S1.GameBoard.GameBoard(bool)
  type: Constructor
  assemblies:
  - Projet-A2-S1
  namespace: Projet_A2_S1
  summary: Second constructor for the Test Function.
  example: []
  syntax:
    content: public GameBoard(bool test)
    parameters:
    - id: test
      type: System.Boolean
      description: ''
    content.vb: Public Sub New(test As Boolean)
  overload: Projet_A2_S1.GameBoard.#ctor*
  nameWithType.vb: GameBoard.New(Boolean)
  fullName.vb: Projet_A2_S1.GameBoard.New(Boolean)
  name.vb: New(Boolean)
- uid: Projet_A2_S1.GameBoard.SaveAndWrite
  commentId: M:Projet_A2_S1.GameBoard.SaveAndWrite
  id: SaveAndWrite
  parent: Projet_A2_S1.GameBoard
  langs:
  - csharp
  - vb
  name: SaveAndWrite()
  nameWithType: GameBoard.SaveAndWrite()
  fullName: Projet_A2_S1.GameBoard.SaveAndWrite()
  type: Method
  assemblies:
  - Projet-A2-S1
  namespace: Projet_A2_S1
  summary: >-
    Function that save the board in a CSV file it is the **ToFile** function

    This can write the new board into the same CSV file
  example: []
  syntax:
    content: public void SaveAndWrite()
    content.vb: Public Sub SaveAndWrite()
  overload: Projet_A2_S1.GameBoard.SaveAndWrite*
- uid: Projet_A2_S1.GameBoard.GetWord(System.Int32,System.Int32,System.String,System.Int32,System.Collections.Generic.Dictionary{System.ValueTuple{System.Int32,System.Int32},System.Char})
  commentId: M:Projet_A2_S1.GameBoard.GetWord(System.Int32,System.Int32,System.String,System.Int32,System.Collections.Generic.Dictionary{System.ValueTuple{System.Int32,System.Int32},System.Char})
  id: GetWord(System.Int32,System.Int32,System.String,System.Int32,System.Collections.Generic.Dictionary{System.ValueTuple{System.Int32,System.Int32},System.Char})
  parent: Projet_A2_S1.GameBoard
  langs:
  - csharp
  - vb
  name: GetWord(int, int, string, int, Dictionary<(int, int), char>?)
  nameWithType: GameBoard.GetWord(int, int, string, int, Dictionary<(int, int), char>?)
  fullName: Projet_A2_S1.GameBoard.GetWord(int, int, string, int, System.Collections.Generic.Dictionary<(int, int), char>?)
  type: Method
  assemblies:
  - Projet-A2-S1
  namespace: Projet_A2_S1
  summary: >-
    This function can find the word in the board

    It returns a dictionnary with each position as key and the character of this position in value

    Is is the **RechercheMot** function
  example: []
  syntax:
    content: public Dictionary<(int, int), char>? GetWord(int x, int y, string word, int index = 0, Dictionary<(int, int), char>? dico = null)
    parameters:
    - id: x
      type: System.Int32
      description: the line of the start of the word , the first character of the word
    - id: y
      type: System.Int32
      description: the column of the start of the word , the first character of the word
    - id: word
      type: System.String
      description: the word that we are looking for
    - id: index
      type: System.Int32
      description: the number of position that are explored in the matrix that works like a int to indicate when we travel the distance of the word
    - id: dico
      type: System.Collections.Generic.Dictionary{System.ValueTuple{System.Int32,System.Int32},System.Char}
      description: the dictionnary that is return by the function
    return:
      type: System.Collections.Generic.Dictionary{System.ValueTuple{System.Int32,System.Int32},System.Char}
      description: ''
    content.vb: Public Function GetWord(x As Integer, y As Integer, word As String, index As Integer = 0, dico As Dictionary(Of (Integer, Integer), Char) = Nothing) As Dictionary(Of (Integer, Integer), Char)
  overload: Projet_A2_S1.GameBoard.GetWord*
  nameWithType.vb: GameBoard.GetWord(Integer, Integer, String, Integer, Dictionary(Of (Integer, Integer), Char))
  fullName.vb: Projet_A2_S1.GameBoard.GetWord(Integer, Integer, String, Integer, System.Collections.Generic.Dictionary(Of (Integer, Integer), Char))
  name.vb: GetWord(Integer, Integer, String, Integer, Dictionary(Of (Integer, Integer), Char))
- uid: Projet_A2_S1.GameBoard.Maj_Plateau
  commentId: M:Projet_A2_S1.GameBoard.Maj_Plateau
  id: Maj_Plateau
  parent: Projet_A2_S1.GameBoard
  langs:
  - csharp
  - vb
  name: Maj_Plateau()
  nameWithType: GameBoard.Maj_Plateau()
  fullName: Projet_A2_S1.GameBoard.Maj_Plateau()
  type: Method
  assemblies:
  - Projet-A2-S1
  namespace: Projet_A2_S1
  summary: >-
    Function that update the board according to the character and the spaces.

    This function appear after each time the board has changed
  example: []
  syntax:
    content: public void Maj_Plateau()
    content.vb: Public Sub Maj_Plateau()
  overload: Projet_A2_S1.GameBoard.Maj_Plateau*
- uid: Projet_A2_S1.GameBoard.ToString
  commentId: M:Projet_A2_S1.GameBoard.ToString
  id: ToString
  parent: Projet_A2_S1.GameBoard
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: GameBoard.ToString()
  fullName: Projet_A2_S1.GameBoard.ToString()
  type: Method
  assemblies:
  - Projet-A2-S1
  namespace: Projet_A2_S1
  summary: >-
    Return the string that represent the board

    the override allows us to do a **Console.WriteLine(board)**
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: ''
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: Projet_A2_S1.GameBoard.ToString*
  exceptions:
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: The file is not found
references:
- uid: Projet_A2_S1
  commentId: N:Projet_A2_S1
  isExternal: true
  href: Projet_A2_S1.html
  name: Projet_A2_S1
  nameWithType: Projet_A2_S1
  fullName: Projet_A2_S1
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Char[,]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.char
  name: char[,]
  nameWithType: char[,]
  fullName: char[,]
  nameWithType.vb: Char(,)
  fullName.vb: Char(,)
  name.vb: Char(,)
  spec.csharp:
  - uid: System.Char
    name: char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: '['
  - name: ','
  - name: ']'
  spec.vb:
  - uid: System.Char
    name: Char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: (
  - name: ','
  - name: )
- uid: Projet_A2_S1.GameBoard.#ctor*
  commentId: Overload:Projet_A2_S1.GameBoard.#ctor
  isExternal: true
  href: Projet_A2_S1.GameBoard.html#Projet_A2_S1_GameBoard__ctor
  name: GameBoard
  nameWithType: GameBoard.GameBoard
  fullName: Projet_A2_S1.GameBoard.GameBoard
  nameWithType.vb: GameBoard.New
  fullName.vb: Projet_A2_S1.GameBoard.New
  name.vb: New
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Projet_A2_S1.GameBoard.SaveAndWrite*
  commentId: Overload:Projet_A2_S1.GameBoard.SaveAndWrite
  isExternal: true
  href: Projet_A2_S1.GameBoard.html#Projet_A2_S1_GameBoard_SaveAndWrite
  name: SaveAndWrite
  nameWithType: GameBoard.SaveAndWrite
  fullName: Projet_A2_S1.GameBoard.SaveAndWrite
- uid: Projet_A2_S1.GameBoard.GetWord*
  commentId: Overload:Projet_A2_S1.GameBoard.GetWord
  isExternal: true
  href: Projet_A2_S1.GameBoard.html#Projet_A2_S1_GameBoard_GetWord_System_Int32_System_Int32_System_String_System_Int32_System_Collections_Generic_Dictionary_System_ValueTuple_System_Int32_System_Int32__System_Char__
  name: GetWord
  nameWithType: GameBoard.GetWord
  fullName: Projet_A2_S1.GameBoard.GetWord
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Collections.Generic.Dictionary{System.ValueTuple{System.Int32,System.Int32},System.Char}
  commentId: T:System.Collections.Generic.Dictionary{System.ValueTuple{System.Int32,System.Int32},System.Char}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<(int, int), char>
  nameWithType: Dictionary<(int, int), char>
  fullName: System.Collections.Generic.Dictionary<(int, int), char>
  nameWithType.vb: Dictionary(Of (Integer, Integer), Char)
  fullName.vb: System.Collections.Generic.Dictionary(Of (Integer, Integer), Char)
  name.vb: Dictionary(Of (Integer, Integer), Char)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  - name: ','
  - name: " "
  - uid: System.Char
    name: char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  - name: ','
  - name: " "
  - uid: System.Char
    name: Char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Projet_A2_S1.GameBoard.Maj_Plateau*
  commentId: Overload:Projet_A2_S1.GameBoard.Maj_Plateau
  isExternal: true
  href: Projet_A2_S1.GameBoard.html#Projet_A2_S1_GameBoard_Maj_Plateau
  name: Maj_Plateau
  nameWithType: GameBoard.Maj_Plateau
  fullName: Projet_A2_S1.GameBoard.Maj_Plateau
- uid: System.IO.FileNotFoundException
  commentId: T:System.IO.FileNotFoundException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.filenotfoundexception
  name: FileNotFoundException
  nameWithType: FileNotFoundException
  fullName: System.IO.FileNotFoundException
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Projet_A2_S1.GameBoard.ToString*
  commentId: Overload:Projet_A2_S1.GameBoard.ToString
  isExternal: true
  href: Projet_A2_S1.GameBoard.html#Projet_A2_S1_GameBoard_ToString
  name: ToString
  nameWithType: GameBoard.ToString
  fullName: Projet_A2_S1.GameBoard.ToString
