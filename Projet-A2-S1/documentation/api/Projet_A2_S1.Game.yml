### YamlMime:ManagedReference
items:
- uid: Projet_A2_S1.Game
  commentId: T:Projet_A2_S1.Game
  id: Game
  parent: Projet_A2_S1
  children:
  - Projet_A2_S1.Game.#ctor
  - Projet_A2_S1.Game.#ctor(System.Boolean)
  - Projet_A2_S1.Game.Board
  - Projet_A2_S1.Game.Dictionary
  - Projet_A2_S1.Game.EndGame
  - Projet_A2_S1.Game.Players
  - Projet_A2_S1.Game.Results
  - Projet_A2_S1.Game.Turn
  - Projet_A2_S1.Game.WordValidate(System.String,Projet_A2_S1.Player)
  langs:
  - csharp
  - vb
  name: Game
  nameWithType: Game
  fullName: Projet_A2_S1.Game
  type: Class
  assemblies:
  - Projet-A2-S1
  namespace: Projet_A2_S1
  syntax:
    content: public class Game
    content.vb: Public Class Game
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
- uid: Projet_A2_S1.Game.#ctor
  commentId: M:Projet_A2_S1.Game.#ctor
  id: '#ctor'
  parent: Projet_A2_S1.Game
  langs:
  - csharp
  - vb
  name: Game()
  nameWithType: Game.Game()
  fullName: Projet_A2_S1.Game.Game()
  type: Constructor
  assemblies:
  - Projet-A2-S1
  namespace: Projet_A2_S1
  syntax:
    content: public Game()
    content.vb: Public Sub New()
  overload: Projet_A2_S1.Game.#ctor*
  nameWithType.vb: Game.New()
  fullName.vb: Projet_A2_S1.Game.New()
  name.vb: New()
- uid: Projet_A2_S1.Game.#ctor(System.Boolean)
  commentId: M:Projet_A2_S1.Game.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: Projet_A2_S1.Game
  langs:
  - csharp
  - vb
  name: Game(bool)
  nameWithType: Game.Game(bool)
  fullName: Projet_A2_S1.Game.Game(bool)
  type: Constructor
  assemblies:
  - Projet-A2-S1
  namespace: Projet_A2_S1
  summary: Second constructor for the test function
  example: []
  syntax:
    content: public Game(bool test)
    parameters:
    - id: test
      type: System.Boolean
      description: ''
    content.vb: Public Sub New(test As Boolean)
  overload: Projet_A2_S1.Game.#ctor*
  nameWithType.vb: Game.New(Boolean)
  fullName.vb: Projet_A2_S1.Game.New(Boolean)
  name.vb: New(Boolean)
- uid: Projet_A2_S1.Game.EndGame
  commentId: M:Projet_A2_S1.Game.EndGame
  id: EndGame
  parent: Projet_A2_S1.Game
  langs:
  - csharp
  - vb
  name: EndGame()
  nameWithType: Game.EndGame()
  fullName: Projet_A2_S1.Game.EndGame()
  type: Method
  assemblies:
  - Projet-A2-S1
  namespace: Projet_A2_S1
  summary: This function can tel if the game is over or not
  example: []
  syntax:
    content: public bool EndGame()
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function EndGame() As Boolean
  overload: Projet_A2_S1.Game.EndGame*
- uid: Projet_A2_S1.Game.Turn
  commentId: M:Projet_A2_S1.Game.Turn
  id: Turn
  parent: Projet_A2_S1.Game
  langs:
  - csharp
  - vb
  name: Turn()
  nameWithType: Game.Turn()
  fullName: Projet_A2_S1.Game.Turn()
  type: Method
  assemblies:
  - Projet-A2-S1
  namespace: Projet_A2_S1
  summary: >-
    This function can pass the turn over each players if their timer !=0. 

    It's also it that structure the organisation of the game
  example: []
  syntax:
    content: public void Turn()
    content.vb: Public Sub Turn()
  overload: Projet_A2_S1.Game.Turn*
- uid: Projet_A2_S1.Game.Results
  commentId: M:Projet_A2_S1.Game.Results
  id: Results
  parent: Projet_A2_S1.Game
  langs:
  - csharp
  - vb
  name: Results()
  nameWithType: Game.Results()
  fullName: Projet_A2_S1.Game.Results()
  type: Method
  assemblies:
  - Projet-A2-S1
  namespace: Projet_A2_S1
  summary: >-
    Print the results of the game 

    Every player is sort by score from the higher to lower
  example: []
  syntax:
    content: public void Results()
    content.vb: Public Sub Results()
  overload: Projet_A2_S1.Game.Results*
- uid: Projet_A2_S1.Game.WordValidate(System.String,Projet_A2_S1.Player)
  commentId: M:Projet_A2_S1.Game.WordValidate(System.String,Projet_A2_S1.Player)
  id: WordValidate(System.String,Projet_A2_S1.Player)
  parent: Projet_A2_S1.Game
  langs:
  - csharp
  - vb
  name: WordValidate(string, Player)
  nameWithType: Game.WordValidate(string, Player)
  fullName: Projet_A2_S1.Game.WordValidate(string, Projet_A2_S1.Player)
  type: Method
  assemblies:
  - Projet-A2-S1
  namespace: Projet_A2_S1
  summary: >-
    This function look if the word is not in the list of the player, if it's in the dictionary and if the word is on the board.

    It also look if the word entered is in the player list or not and in the dictionnary
  example: []
  syntax:
    content: public bool WordValidate(string word, Player player)
    parameters:
    - id: word
      type: System.String
      description: the word that we are looking for
    - id: player
      type: Projet_A2_S1.Player
      description: The player that is searching the word
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function WordValidate(word As String, player As Player) As Boolean
  overload: Projet_A2_S1.Game.WordValidate*
  nameWithType.vb: Game.WordValidate(String, Player)
  fullName.vb: Projet_A2_S1.Game.WordValidate(String, Projet_A2_S1.Player)
  name.vb: WordValidate(String, Player)
- uid: Projet_A2_S1.Game.Dictionary
  commentId: P:Projet_A2_S1.Game.Dictionary
  id: Dictionary
  parent: Projet_A2_S1.Game
  langs:
  - csharp
  - vb
  name: Dictionary
  nameWithType: Game.Dictionary
  fullName: Projet_A2_S1.Game.Dictionary
  type: Property
  assemblies:
  - Projet-A2-S1
  namespace: Projet_A2_S1
  syntax:
    content: public CustomDictionary Dictionary { get; set; }
    parameters: []
    return:
      type: Projet_A2_S1.CustomDictionary
    content.vb: Public Property Dictionary As CustomDictionary
  overload: Projet_A2_S1.Game.Dictionary*
- uid: Projet_A2_S1.Game.Board
  commentId: P:Projet_A2_S1.Game.Board
  id: Board
  parent: Projet_A2_S1.Game
  langs:
  - csharp
  - vb
  name: Board
  nameWithType: Game.Board
  fullName: Projet_A2_S1.Game.Board
  type: Property
  assemblies:
  - Projet-A2-S1
  namespace: Projet_A2_S1
  syntax:
    content: public GameBoard Board { get; set; }
    parameters: []
    return:
      type: Projet_A2_S1.GameBoard
    content.vb: Public Property Board As GameBoard
  overload: Projet_A2_S1.Game.Board*
- uid: Projet_A2_S1.Game.Players
  commentId: P:Projet_A2_S1.Game.Players
  id: Players
  parent: Projet_A2_S1.Game
  langs:
  - csharp
  - vb
  name: Players
  nameWithType: Game.Players
  fullName: Projet_A2_S1.Game.Players
  type: Property
  assemblies:
  - Projet-A2-S1
  namespace: Projet_A2_S1
  syntax:
    content: public PlayerList Players { get; set; }
    parameters: []
    return:
      type: Projet_A2_S1.PlayerList
    content.vb: Public Property Players As PlayerList
  overload: Projet_A2_S1.Game.Players*
references:
- uid: Projet_A2_S1
  commentId: N:Projet_A2_S1
  isExternal: true
  href: Projet_A2_S1.html
  name: Projet_A2_S1
  nameWithType: Projet_A2_S1
  fullName: Projet_A2_S1
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Projet_A2_S1.Game.#ctor*
  commentId: Overload:Projet_A2_S1.Game.#ctor
  isExternal: true
  href: Projet_A2_S1.Game.html#Projet_A2_S1_Game__ctor
  name: Game
  nameWithType: Game.Game
  fullName: Projet_A2_S1.Game.Game
  nameWithType.vb: Game.New
  fullName.vb: Projet_A2_S1.Game.New
  name.vb: New
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Projet_A2_S1.Game.EndGame*
  commentId: Overload:Projet_A2_S1.Game.EndGame
  isExternal: true
  href: Projet_A2_S1.Game.html#Projet_A2_S1_Game_EndGame
  name: EndGame
  nameWithType: Game.EndGame
  fullName: Projet_A2_S1.Game.EndGame
- uid: Projet_A2_S1.Game.Turn*
  commentId: Overload:Projet_A2_S1.Game.Turn
  isExternal: true
  href: Projet_A2_S1.Game.html#Projet_A2_S1_Game_Turn
  name: Turn
  nameWithType: Game.Turn
  fullName: Projet_A2_S1.Game.Turn
- uid: Projet_A2_S1.Game.Results*
  commentId: Overload:Projet_A2_S1.Game.Results
  isExternal: true
  href: Projet_A2_S1.Game.html#Projet_A2_S1_Game_Results
  name: Results
  nameWithType: Game.Results
  fullName: Projet_A2_S1.Game.Results
- uid: Projet_A2_S1.Game.WordValidate*
  commentId: Overload:Projet_A2_S1.Game.WordValidate
  isExternal: true
  href: Projet_A2_S1.Game.html#Projet_A2_S1_Game_WordValidate_System_String_Projet_A2_S1_Player_
  name: WordValidate
  nameWithType: Game.WordValidate
  fullName: Projet_A2_S1.Game.WordValidate
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Projet_A2_S1.Player
  commentId: T:Projet_A2_S1.Player
  parent: Projet_A2_S1
  isExternal: true
  href: Projet_A2_S1.Player.html
  name: Player
  nameWithType: Player
  fullName: Projet_A2_S1.Player
- uid: Projet_A2_S1.Game.Dictionary*
  commentId: Overload:Projet_A2_S1.Game.Dictionary
  isExternal: true
  href: Projet_A2_S1.Game.html#Projet_A2_S1_Game_Dictionary
  name: Dictionary
  nameWithType: Game.Dictionary
  fullName: Projet_A2_S1.Game.Dictionary
- uid: Projet_A2_S1.CustomDictionary
  commentId: T:Projet_A2_S1.CustomDictionary
  parent: Projet_A2_S1
  isExternal: true
  href: Projet_A2_S1.CustomDictionary.html
  name: CustomDictionary
  nameWithType: CustomDictionary
  fullName: Projet_A2_S1.CustomDictionary
- uid: Projet_A2_S1.Game.Board*
  commentId: Overload:Projet_A2_S1.Game.Board
  isExternal: true
  href: Projet_A2_S1.Game.html#Projet_A2_S1_Game_Board
  name: Board
  nameWithType: Game.Board
  fullName: Projet_A2_S1.Game.Board
- uid: Projet_A2_S1.GameBoard
  commentId: T:Projet_A2_S1.GameBoard
  parent: Projet_A2_S1
  isExternal: true
  href: Projet_A2_S1.GameBoard.html
  name: GameBoard
  nameWithType: GameBoard
  fullName: Projet_A2_S1.GameBoard
- uid: Projet_A2_S1.Game.Players*
  commentId: Overload:Projet_A2_S1.Game.Players
  isExternal: true
  href: Projet_A2_S1.Game.html#Projet_A2_S1_Game_Players
  name: Players
  nameWithType: Game.Players
  fullName: Projet_A2_S1.Game.Players
- uid: Projet_A2_S1.PlayerList
  commentId: T:Projet_A2_S1.PlayerList
  parent: Projet_A2_S1
  isExternal: true
  href: Projet_A2_S1.PlayerList.html
  name: PlayerList
  nameWithType: PlayerList
  fullName: Projet_A2_S1.PlayerList
